(function(){"use strict";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const E="167";function q(x,t,s){return Math.max(t,Math.min(s,x))}class V{constructor(t=0,s=0,i=0,h=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=i,this._w=h}static slerpFlat(t,s,i,h,e,y,l){let u=i[h+0],n=i[h+1],a=i[h+2],o=i[h+3];const _=e[y+0],r=e[y+1],c=e[y+2],d=e[y+3];if(l===0){t[s+0]=u,t[s+1]=n,t[s+2]=a,t[s+3]=o;return}if(l===1){t[s+0]=_,t[s+1]=r,t[s+2]=c,t[s+3]=d;return}if(o!==d||u!==_||n!==r||a!==c){let M=1-l;const C=u*_+n*r+a*c+o*d,D=C>=0?1:-1,N=1-C*C;if(N>Number.EPSILON){const m=Math.sqrt(N),Q=Math.atan2(m,C*D);M=Math.sin(M*Q)/m,l=Math.sin(l*Q)/m}const S=l*D;if(u=u*M+_*S,n=n*M+r*S,a=a*M+c*S,o=o*M+d*S,M===1-l){const m=1/Math.sqrt(u*u+n*n+a*a+o*o);u*=m,n*=m,a*=m,o*=m}}t[s]=u,t[s+1]=n,t[s+2]=a,t[s+3]=o}static multiplyQuaternionsFlat(t,s,i,h,e,y){const l=i[h],u=i[h+1],n=i[h+2],a=i[h+3],o=e[y],_=e[y+1],r=e[y+2],c=e[y+3];return t[s]=l*c+a*o+u*r-n*_,t[s+1]=u*c+a*_+n*o-l*r,t[s+2]=n*c+a*r+l*_-u*o,t[s+3]=a*c-l*o-u*_-n*r,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,i,h){return this._x=t,this._y=s,this._z=i,this._w=h,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s=!0){const i=t._x,h=t._y,e=t._z,y=t._order,l=Math.cos,u=Math.sin,n=l(i/2),a=l(h/2),o=l(e/2),_=u(i/2),r=u(h/2),c=u(e/2);switch(y){case"XYZ":this._x=_*a*o+n*r*c,this._y=n*r*o-_*a*c,this._z=n*a*c+_*r*o,this._w=n*a*o-_*r*c;break;case"YXZ":this._x=_*a*o+n*r*c,this._y=n*r*o-_*a*c,this._z=n*a*c-_*r*o,this._w=n*a*o+_*r*c;break;case"ZXY":this._x=_*a*o-n*r*c,this._y=n*r*o+_*a*c,this._z=n*a*c+_*r*o,this._w=n*a*o-_*r*c;break;case"ZYX":this._x=_*a*o-n*r*c,this._y=n*r*o+_*a*c,this._z=n*a*c-_*r*o,this._w=n*a*o+_*r*c;break;case"YZX":this._x=_*a*o+n*r*c,this._y=n*r*o+_*a*c,this._z=n*a*c-_*r*o,this._w=n*a*o-_*r*c;break;case"XZY":this._x=_*a*o-n*r*c,this._y=n*r*o-_*a*c,this._z=n*a*c+_*r*o,this._w=n*a*o+_*r*c;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+y)}return s===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const i=s/2,h=Math.sin(i);return this._x=t.x*h,this._y=t.y*h,this._z=t.z*h,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,i=s[0],h=s[4],e=s[8],y=s[1],l=s[5],u=s[9],n=s[2],a=s[6],o=s[10],_=i+l+o;if(_>0){const r=.5/Math.sqrt(_+1);this._w=.25/r,this._x=(a-u)*r,this._y=(e-n)*r,this._z=(y-h)*r}else if(i>l&&i>o){const r=2*Math.sqrt(1+i-l-o);this._w=(a-u)/r,this._x=.25*r,this._y=(h+y)/r,this._z=(e+n)/r}else if(l>o){const r=2*Math.sqrt(1+l-i-o);this._w=(e-n)/r,this._x=(h+y)/r,this._y=.25*r,this._z=(u+a)/r}else{const r=2*Math.sqrt(1+o-i-l);this._w=(y-h)/r,this._x=(e+n)/r,this._y=(u+a)/r,this._z=.25*r}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let i=t.dot(s)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(q(this.dot(t),-1,1)))}rotateTowards(t,s){const i=this.angleTo(t);if(i===0)return this;const h=Math.min(1,s/i);return this.slerp(t,h),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const i=t._x,h=t._y,e=t._z,y=t._w,l=s._x,u=s._y,n=s._z,a=s._w;return this._x=i*a+y*l+h*n-e*u,this._y=h*a+y*u+e*l-i*n,this._z=e*a+y*n+i*u-h*l,this._w=y*a-i*l-h*u-e*n,this._onChangeCallback(),this}slerp(t,s){if(s===0)return this;if(s===1)return this.copy(t);const i=this._x,h=this._y,e=this._z,y=this._w;let l=y*t._w+i*t._x+h*t._y+e*t._z;if(l<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,l=-l):this.copy(t),l>=1)return this._w=y,this._x=i,this._y=h,this._z=e,this;const u=1-l*l;if(u<=Number.EPSILON){const r=1-s;return this._w=r*y+s*this._w,this._x=r*i+s*this._x,this._y=r*h+s*this._y,this._z=r*e+s*this._z,this.normalize(),this}const n=Math.sqrt(u),a=Math.atan2(n,l),o=Math.sin((1-s)*a)/n,_=Math.sin(s*a)/n;return this._w=y*o+this._w*_,this._x=i*o+this._x*_,this._y=h*o+this._y*_,this._z=e*o+this._z*_,this._onChangeCallback(),this}slerpQuaternions(t,s,i){return this.copy(t).slerp(s,i)}random(){const t=2*Math.PI*Math.random(),s=2*Math.PI*Math.random(),i=Math.random(),h=Math.sqrt(1-i),e=Math.sqrt(i);return this.set(h*Math.sin(t),h*Math.cos(t),e*Math.sin(s),e*Math.cos(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class g{constructor(t=0,s=0,i=0){g.prototype.isVector3=!0,this.x=t,this.y=s,this.z=i}set(t,s,i){return i===void 0&&(i=this.z),this.x=t,this.y=s,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return this.applyQuaternion(A.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(A.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,i=this.y,h=this.z,e=t.elements;return this.x=e[0]*s+e[3]*i+e[6]*h,this.y=e[1]*s+e[4]*i+e[7]*h,this.z=e[2]*s+e[5]*i+e[8]*h,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,i=this.y,h=this.z,e=t.elements,y=1/(e[3]*s+e[7]*i+e[11]*h+e[15]);return this.x=(e[0]*s+e[4]*i+e[8]*h+e[12])*y,this.y=(e[1]*s+e[5]*i+e[9]*h+e[13])*y,this.z=(e[2]*s+e[6]*i+e[10]*h+e[14])*y,this}applyQuaternion(t){const s=this.x,i=this.y,h=this.z,e=t.x,y=t.y,l=t.z,u=t.w,n=2*(y*h-l*i),a=2*(l*s-e*h),o=2*(e*i-y*s);return this.x=s+u*n+y*o-l*a,this.y=i+u*a+l*n-e*o,this.z=h+u*o+e*a-y*n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,i=this.y,h=this.z,e=t.elements;return this.x=e[0]*s+e[4]*i+e[8]*h,this.y=e[1]*s+e[5]*i+e[9]*h,this.z=e[2]*s+e[6]*i+e[10]*h,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,s){const i=t.x,h=t.y,e=t.z,y=s.x,l=s.y,u=s.z;return this.x=h*u-e*l,this.y=e*y-i*u,this.z=i*l-h*y,this}projectOnVector(t){const s=t.lengthSq();if(s===0)return this.set(0,0,0);const i=t.dot(this)/s;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return b.copy(this).projectOnVector(t),this.sub(b)}reflect(t){return this.sub(b.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(s===0)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(q(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y,h=this.z-t.z;return s*s+i*i+h*h}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,i){const h=Math.sin(s)*t;return this.x=h*Math.sin(i),this.y=Math.cos(s)*t,this.z=h*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,i){return this.x=t*Math.sin(s),this.y=i,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),h=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=i,this.z=h,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,s*4)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,s*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,s=Math.random()*2-1,i=Math.sqrt(1-s*s);return this.x=i*Math.cos(t),this.y=s,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const b=new g,A=new V;class P{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=f(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const s=f();t=(s-this.oldTime)/1e3,this.oldTime=s,this.elapsedTime+=t}return t}}function f(){return(typeof performance>"u"?Date:performance).now()}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:E}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=E);const Z=66743e-15,R=new P;let F=1,T=1,z=[];onmessage=x=>{const t=x.data[0];t==0?z=x.data[1]:t==1?postMessage([I,z]):t==2?T=x.data[1]:t==3&&(F=x.data[1])};function X(x,t){let s=x.x-t.x,i=x.y-t.y,h=x.z-t.z;return Math.sqrt(s*s+i*i+h*h)}function k(x,t){let s={x:0,y:0,z:0};return s.x=x.x+t.x,s.y=x.y+t.y,s.z=x.z+t.z,s}function Y(x,t){let s={x:0,y:0,z:0};return s.x=x.x*t,s.y=x.y*t,s.z=x.z*t,s}let p=[],I=0,w=new MessageChannel;function j(){let x=R.getDelta();if(x==0){w.port2.postMessage(null);return}p.push(x),p.reduce((t,s)=>t+s,0)>=.1&&(I=p.sort((t,s)=>t-s)[Math.floor(p.length/2)],p=[]),x*=F,x>T&&(x=T);for(let t=0;t<z.length-1;t++)for(let s=t+1;s<z.length;s++){let i=z[s],h=z[t];if(!h.majorCelestial&&h.groupID!=i.groupID)continue;let e=Z*i.mass*h.mass/Math.pow(X(h.position,i.position),2),y=new g().subVectors(h.position,i.position).normalize();i.velocity=k(i.velocity,y.multiplyScalar(e/i.mass*x)),h.velocity=k(h.velocity,y.multiplyScalar(e/h.mass*x*-1))}for(let t=0;t<z.length;t++){let s=z[t];s.position=k(s.position,Y(s.velocity,x))}w.port2.postMessage(null)}w.port1.onmessage=function(x){j()},w.port1.start(),w.port2.start(),j()})();
